/* Generated By:JJTree&JavaCC: Do not edit this line. PCREConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PCREConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int DOT = 4;
  /** RegularExpression Id. */
  int LF = 5;
  /** RegularExpression Id. */
  int DEC = 6;
  /** RegularExpression Id. */
  int TAB = 7;
  /** RegularExpression Id. */
  int AST = 8;
  /** RegularExpression Id. */
  int NULL = 9;
  /** RegularExpression Id. */
  int NOTDEC = 10;
  /** RegularExpression Id. */
  int HWHITES = 11;
  /** RegularExpression Id. */
  int HWHITES_R = 12;
  /** RegularExpression Id. */
  int NHWHITES = 13;
  /** RegularExpression Id. */
  int WHITES = 14;
  /** RegularExpression Id. */
  int NWHITES = 15;
  /** RegularExpression Id. */
  int VWHITES = 16;
  /** RegularExpression Id. */
  int NVWHITES = 17;
  /** RegularExpression Id. */
  int WORD = 18;
  /** RegularExpression Id. */
  int NWORD = 19;
  /** RegularExpression Id. */
  int PLUS = 20;
  /** RegularExpression Id. */
  int INTERROGATION = 21;
  /** RegularExpression Id. */
  int OPEN_ROUND_BRACKET = 22;
  /** RegularExpression Id. */
  int CLOSE_ROUND_BRACKET = 23;
  /** RegularExpression Id. */
  int PLOOKAH = 24;
  /** RegularExpression Id. */
  int NLOOKAH = 25;
  /** RegularExpression Id. */
  int OPEN_BRACKET = 26;
  /** RegularExpression Id. */
  int COMMA = 27;
  /** RegularExpression Id. */
  int CLOSE_BRACKET = 28;
  /** RegularExpression Id. */
  int OPEN_SQ_BRACKET = 29;
  /** RegularExpression Id. */
  int CLOSE_SQ_BRACKET = 30;
  /** RegularExpression Id. */
  int ALTERNATE = 31;
  /** RegularExpression Id. */
  int WORD_BOUND = 32;
  /** RegularExpression Id. */
  int NOT_WORD_BOUND = 33;
  /** RegularExpression Id. */
  int CARET = 34;
  /** RegularExpression Id. */
  int SLASH_CA_A = 35;
  /** RegularExpression Id. */
  int DOLLAR = 36;
  /** RegularExpression Id. */
  int SLASH_CA_Z = 37;
  /** RegularExpression Id. */
  int SLASH_Z = 38;
  /** RegularExpression Id. */
  int SLASH_CA_G = 39;
  /** RegularExpression Id. */
  int SLASH_A = 40;
  /** RegularExpression Id. */
  int SLASH_C = 41;
  /** RegularExpression Id. */
  int ESCAPE = 42;
  /** RegularExpression Id. */
  int SLASH = 43;
  /** RegularExpression Id. */
  int FORM_FEED = 44;
  /** RegularExpression Id. */
  int NEWLINE = 45;
  /** RegularExpression Id. */
  int CARRIAGE_RETURN = 46;
  /** RegularExpression Id. */
  int SLASH_CA_C = 47;
  /** RegularExpression Id. */
  int NOT_NEWLINE = 48;
  /** RegularExpression Id. */
  int NEWLINE_SEQ = 49;
  /** RegularExpression Id. */
  int UNIEGC = 50;
  /** RegularExpression Id. */
  int RANGE = 51;
  /** RegularExpression Id. */
  int NUMBER = 52;
  /** RegularExpression Id. */
  int CHARACTER = 53;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "\".\"",
    "\"\\n\"",
    "\"\\\\d\"",
    "\"\\\\t\"",
    "\"*\"",
    "\"\\\\0\"",
    "\"\\\\D\"",
    "\"\\\\h\"",
    "\"\\\\K\"",
    "\"\\\\H\"",
    "\"\\\\s\"",
    "\"\\\\S\"",
    "\"\\\\v\"",
    "\"\\\\V\"",
    "\"\\\\w\"",
    "\"\\\\W\"",
    "\"+\"",
    "\"?\"",
    "\"(\"",
    "\")\"",
    "\"?=\"",
    "\"?!\"",
    "\"{\"",
    "\",\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\"|\"",
    "\"\\\\b\"",
    "\"\\\\B\"",
    "\"^\"",
    "\"\\\\A\"",
    "\"$\"",
    "\"\\\\Z\"",
    "\"\\\\z\"",
    "\"\\\\G\"",
    "\"\\\\a\"",
    "\"\\\\c\"",
    "\"\\\\e\"",
    "\"\\\\\"",
    "\"\\\\f\"",
    "\"\\\\n\"",
    "\"\\\\r\"",
    "\"\\\\C\"",
    "\"\\\\N\"",
    "\"\\\\R\"",
    "\"\\\\X\"",
    "\"-\"",
    "<NUMBER>",
    "<CHARACTER>",
  };

}
